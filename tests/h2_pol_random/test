#!/usr/bin/env python3

import sys
from pathlib import Path

FILE = Path(__file__).resolve()
sys.path.append(str(FILE.parents[1]))

from tester import *  # isort:skip

options = script_cli()

filters = {
    SUM_OCCUPIED: rel_tolerance(1.0e-6),
    E_KIN: rel_tolerance(1.0e-6),
    E_EN: rel_tolerance(1.0e-6),
    E_EE: rel_tolerance(1.0e-6),
    E_X: rel_tolerance(1.0e-6),
    E_XC: rel_tolerance(1.0e-6),
    E_EEXT: rel_tolerance(1.0e-6),
    E_NEXT: rel_tolerance(1.0e-6),
    E_EL: rel_tolerance(1.0e-6),
    POLARIZABILITY(0.0): rel_tolerance(1.0e-6),
    POLARIZABILITY(0.001): rel_tolerance(1.0e-6),
}

ierr = run(options, input_file="h2", filters=filters, extra_args=["--json"])

# now compare against output from similar calculation, but starting from a zero guess
for freq in [0.0, 0.001]:
    with (FILE.parents[0] / "reference/h2_zero_guess.json").open("r") as fh:
        zero_guess_alpha_zz = json.load(fh)["output"]["properties"]["polarizability"][f"pol-{freq:1.6f}"]["tensor"][8]

    with Path("h2.json").open("r") as fh:
        cube_guess_alpha_zz = json.load(fh)["output"]["properties"]["polarizability"][f"pol-{freq:1.6f}"]["tensor"][8]

    # compare up to `world_prec` of calculations
    passed, message = compare_values(
        cube_guess_alpha_zz,
        zero_guess_alpha_zz,
        f"Random guess vs. zero guess for alpha zz. freq={freq}",
        atol=1.0e-2,
        rtol=0.0,
    )
    sys.stdout.write(f"{message}\n")
    ierr += 0 if passed else 137

sys.exit(ierr)
